@use '../../../styles/variables' as *;
@use '../../../styles/mixins' as *;

.my-books-container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;

  .content {
    flex: 1;
    display: flex;
    justify-content: center;
    padding: 2rem;
    margin-top: 4rem;

    .card {
      width: 100%;
      max-width: 1200px;
      padding: 2rem;
      background-color: $background;

      .card-title {
        font-size: 2rem;
        margin-bottom: 1.5rem;
        text-align: center;
        color: $text;
      }

      .books-table {
        width: 100%;

        th.mat-header-cell {
          font-weight: 500;
          color: rgba(0, 0, 0, 0.7);
        }

        td.mat-cell, th.mat-header-cell {
          padding: 12px 16px;
        }

        .book-info {
          display: flex;
          align-items: center;

          .book-cover {
            width: 50px;
            height: 75px;
            object-fit: cover;
            margin-right: 1rem;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
          }

          .book-title-container {
            display: flex;
            flex-direction: column;

            .book-title {
              font-weight: 500;
              margin-bottom: 4px;
            }

            .book-author {
              font-size: 0.85rem;
              color: rgba(0, 0, 0, 0.6);
            }
          }

          .book-genre {
            color: rgba(255, 255, 255, 0.7); // Using direct color instead of undefined variable
            font-size: 0.9rem;
            margin-top: 0.25rem;
          }
        }
      }

      .loading, .empty-state {
        display: flex;
        justify-content: center;
        padding: 2rem;
        color: $text;
      }

      // Status color indicators
      .status-active {
        color: #4caf50;
        font-weight: bold;
      }

      .status-pending_approval, .status-pending_return {
        color: #ff9800;
        font-weight: bold;
      }

      .status-returned {
        color: #2196f3;
      }

      .status-denied {
        color: #f44336;
      }

      .overdue {
        color: #f44336;
        font-weight: bold;
      }
    }
  }
}

// Add this to your existing styles
::ng-deep .mat-tab-labels {
  justify-content: center;
  margin-bottom: 1rem;
}

::ng-deep .mat-tab-label {
  min-width: 120px;
  font-weight: 500;
}

::ng-deep .mat-tab-group {
  margin-bottom: 30px;
}

.status-waiting, .status-pending_approval {
  color: #ff9800;
}

// Add appropriate spacing for the tables inside tabs
.mat-tab-body-content {
  padding: 16px 0;
}

// Add these styles to the end of your existing styles
.books-table {
  // Set specific column widths
  .mat-column-book {
    min-width: 300px;
    width: 40%;
  }

  .mat-column-status {
    width: 15%;
  }

  .mat-column-rentDate,
  .mat-column-returnDate,
  .mat-column-returnDeadline {
    width: 15%;
  }

  .mat-column-actions {
    width: 15%;
  }

  // Improve book title display
  .book-title-container {
    .book-title {
      display: block;
      font-weight: 500;
      font-size: 1rem;
      margin-bottom: 4px;
      white-space: normal; // Allow text to wrap
      line-height: 1.3;
    }

    .book-author {
      display: block;
      font-size: 0.85rem;
      color: rgba(0, 0, 0, 0.6);
    }
  }
}

// Ensure table takes full width
.mat-table {
  width: 100%;
  table-layout: fixed;
}
